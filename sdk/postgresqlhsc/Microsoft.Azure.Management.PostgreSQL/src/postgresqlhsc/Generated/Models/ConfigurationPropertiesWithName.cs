// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PostgreSQL.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of a configuration with name.
    /// </summary>
    public partial class ConfigurationPropertiesWithName : ConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ConfigurationPropertiesWithName
        /// class.
        /// </summary>
        public ConfigurationPropertiesWithName()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfigurationPropertiesWithName
        /// class.
        /// </summary>
        /// <param name="value">Value of the configuration.</param>
        /// <param name="source">Source of the configuration.</param>
        /// <param name="description">Description of the configuration.</param>
        /// <param name="defaultValue">Default value of the
        /// configuration.</param>
        /// <param name="dataType">Data type of the configuration. Possible
        /// values include: 'Boolean', 'Numeric', 'Integer',
        /// 'Enumeration'</param>
        /// <param name="allowedValues">Allowed values of the
        /// configuration.</param>
        /// <param name="name">Name of the configuration.</param>
        public ConfigurationPropertiesWithName(string value, string source = default(string), string description = default(string), string defaultValue = default(string), string dataType = default(string), string allowedValues = default(string), string name = default(string))
            : base(value, source, description, defaultValue, dataType, allowedValues)
        {
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
