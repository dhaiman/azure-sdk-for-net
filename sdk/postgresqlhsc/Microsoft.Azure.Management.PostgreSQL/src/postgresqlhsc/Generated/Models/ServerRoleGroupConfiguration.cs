// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PostgreSQL.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents server role group configurations.
    /// </summary>
    public partial class ServerRoleGroupConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ServerRoleGroupConfiguration
        /// class.
        /// </summary>
        public ServerRoleGroupConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerRoleGroupConfiguration
        /// class.
        /// </summary>
        /// <param name="role">The role of servers in the server role group.
        /// Possible values include: 'Coordinator', 'Worker'</param>
        /// <param name="configurations">The list of configurations.</param>
        public ServerRoleGroupConfiguration(string role, IList<ConfigurationPropertiesWithName> configurations)
        {
            Role = role;
            Configurations = configurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the role of servers in the server role group. Possible
        /// values include: 'Coordinator', 'Worker'
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// Gets or sets the list of configurations.
        /// </summary>
        [JsonProperty(PropertyName = "configurations")]
        public IList<ConfigurationPropertiesWithName> Configurations { get; set; }

    }
}
